{
    "openapi": "3.0.3",
  "info": {
    "version": "2.1.15",
    "title": "Swagger Goose Track",
    "description": "Swagger to work with the Goose Track backend."
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    {"url": "https://goose-track-project-backend.onrender.com/api"}, 
    {"url": "http://localhost:3001/api"}
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Tasks",
      "description": "Tasks endpoints"
    },
    {
      "name": "Reviews",
      "description": "Reviews endpoints"
    }
    ],
    "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Sign up new user",
        "description": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration request parameters",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New User Registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserIsRegistered"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequesResponse"
                }
              }
            }
          },
          "409": {
            "description": "User with such email already exists",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logs user into the system",
        "description": "User authorization",
        "parameters": [],
        "requestBody": {
          "description": "Request parameters for authorization",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New User Registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserIsAuthorized"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logs out current logged in user session",
        "description": "User logs out",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "User signed out",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user info",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/edit": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update user info",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User info object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/avatars": {
      "post": {
        "tags": ["Auth"],
        "summary": "Update user avatar",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User info object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },

     "/tasks?currentMonth={currentMonth}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Update task",
        "parameters": [
          {
            "name": "currentMonth",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The month identifier  to find tasks.",
            "example": "2005-12"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTasksByMonthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/tasks/": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Create new task",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "task data object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/tasks/{taskID}": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Update task",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the task to delete."
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User info object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete task",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the task to delete"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/reviews/": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Gets the last 10 user reviews.",
        "parameters": [],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllReviewsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/reviews/own": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Gets current users review",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Reviews"],
        "summary": "Adds new review",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Review data object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddReviewRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["Reviews"],
        "summary": "Updates existing review",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Review data object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Reviews"],
        "summary": "Deletes current users review",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteReviewResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorBadRequesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
  }
},
"components": {
    "schemas": {
        "RegisterUser": {
            "type": "object",
            "required": ["name", "email", "password"],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Users name",
                    "example": "User"
                },
                "email": {
                    "type": "string",
                    "description": "Users email",
                    "format": "email"
                },
                "password": {
                    "type": "string",
                    "description": "Users password",
                    "example": "qwerty12345"
                }
            }
        },
        "UserIsRegistered": {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/UserIsRegisteredPropertiesUser" 
              }
            }
        },
        "UserIsRegisteredPropertiesUser": {
          "type": "object",
          "properties": {
            "name": {
                    "type": "string",
                    "description": "Users name",
                    "example": "User"
                },
                "email": {
                    "type": "string",
                    "description": "Users email",
                    "format": "email"
                }
          }
        },
        "errorBadRequesResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "description": "Error status code",
                    "example": "400"
                },
                "message": {
                    "type": "string",
                    "description": "Error message",
                    "example": "Bad request"
                }
            }
        },
        "LoginUser": {
          "type": "object",
          "required": ["email", "password"],
          "properties": {
            "email": {
              "type": "string",
              "description": "Users email",
              "format": "email"
            },
            "password": {
              "type": "string",
              "description": "Users password",
              "example": "qwerty12345"
            }
          }
        },
        "UserIsAuthorized": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "description": "Users token",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzaWQiOiIyOWI4ZmZmNS0xN2NjLTQ5NTYtOTViZC1jN2U3N2FkZDEwOWEiLCJpYXQiOjE2ODE4OTM3MzEsImV4cCI6MTAwMDAwMDE2ODE4OTM3MzJ9.hQpNKIj4SR7Gm9waUMn7hzwKQyqwKrniL_qSW7SxrjM"
            },
            "user": {
              "$ref": "#/components/schemas/UserIsAuthorizedPropertiesUser" 
            }
          }
        },
        "UserIsAuthorizedPropertiesUser": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Users ID",
              "example": "9578a252-1d7a-4fcc-82e2-d1a528dd3d0c"
            },
            "email": {
              "type": "string",
              "description": "Users email",
              "format": "email"
            },
            "name": {
              "type": "string",
              "description": "Users name",
              "example": "User"
            }
          }
        },
        "CurrentUserResponse": {
        "type": "object",
          "properties": {
              "currentUser": {
                "$ref": "#/components/schemas/CurrentUserResponseProperties"
              }
          }
      },
      "CurrentUserResponseProperties": {
          "type": "object",
          "properties": {
                "name": {
                  "type": "string",
                  "description": "User name",
                  "example": "user"
                },
                "email": {
                  "type": "string",
                  "description": "User's email",
                  "format": "email"
                },
                "avatarURL": {
                  "type": "string",
                  "description": "Avatar URL",
                  "example": "http://res.cloudinary.com/photo.jpg"
                },
                "birthday": {
                  "type": "string",
                  "description": "Users birthday",
                  "example": "1992-10-11"
                },
                "phone": {
                  "type": "string",
                  "description": "Users birthday",
                  "example": "1234561144"
                },
                "social": {
                  "type": "string",
                  "description": "Users social",
                  "example": "SomeName"
                }
        } 
      },
      "UpdateUserInfoRequest": {
          "type": "object",
          "properties": {
                "name": {
                  "type": "string",
                  "description": "User name",
                  "example": "user"
                },
                "email": {
                  "type": "string",
                  "description": "User's email",
                  "format": "email"
                },
                "avatarURL": {
                  "type": "string",
                  "description": "Avatar URL",
                  "example": "http://res.cloudinary.com/photo.jpg"
                },
                "birthday": {
                  "type": "string",
                  "description": "Users birthday",
                  "example": "1992-10-11"
                },
                "phone": {
                  "type": "string",
                  "description": "Users birthday",
                  "example": "1234561144"
                },
                "social": {
                  "type": "string",
                  "description": "Users social",
                  "example": "SomeName"
                }
        } 
      },
      "UpdateUserInfoResponse": {
          "type": "object",
          "properties": {
                "name": {
                  "type": "string",
                  "description": "User name",
                  "example": "user"
                },
                "email": {
                  "type": "string",
                  "description": "User's email",
                  "format": "email"
                },
                "avatarURL": {
                  "type": "string",
                  "description": "Avatar URL",
                  "example": "http://res.cloudinary.com/photo.jpg"
                },
                "birthday": {
                  "type": "string",
                  "description": "Users birthday",
                  "example": "1992-10-11"
                },
                "phone": {
                  "type": "string",
                  "description": "Users birthday",
                  "example": "1234561144"
                },
                "social": {
                  "type": "string",
                  "description": "Users social",
                  "example": "SomeName"
                }
        } 
      },
      "UpdateAvatarRequest": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "file"
          }
        }
      },
      "UpdateAvatarResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "Avatar URL",
            "example": "http://res.cloudinary.com/photo.jpg"
          }
        }
    },
    "GetTasksByMonthResponse": {
        "type": "array",
          "properties": [{
            "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Unique identifier for the task",
                    "example": "6519b2c721711d86afea4a3e"
                  },
                  "title": {
                    "type": "string",
                    "description": "Task title",
                    "example": "Test task 1"
                  },
                  "priority": {
                    "type": "string",
                    "description": "Task priority",
                    "example": "medium"
                  },
                  "category": {
                    "type": "string",
                    "description": "Task category",
                    "example": "todo"
                  },
                  "date": {
                    "type": "string",
                    "description": "Date of the task",
                    "example": "2023-11-10"
                  },
                  "start": {
                    "type": "string",
                    "description": "Start time of the task",
                    "example": "10:10"
                  },
                  "end": {
                    "type": "string",
                    "description": "End time of the task",
                    "example": "20:20"
                  }
                }
          }],
          "example":[
            {
              "_id": "651aa445dd16d26661fd7ea3",
              "title": "Task 1",
              "priority": "medium",
              "category": "to-do",
              "date": "2023-10-09",
              "start": "20:30",
              "end": "30:20"
            },
            {
              "_id": "651aa447dd16d26661fd7ea6",
              "title": "Task 2",
              "priority": "medium",
              "category": "to-do",
              "date": "2023-10-09",
              "start": "20:30",
              "end": "30:20"
            }
          ]
        
      },
      "CreateTaskRequest": {
        "type": "object",
        "required": ["title", "priority", "category", "status", "date", "start", "end"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Some task title"
          },
          "priority": {
            "type": "string",
            "description": "Priority of the task",
            "example": "medium"
          },
          "category": {
            "type": "string",
            "description": "Category of the task",
            "example": "to-do"
          },
          "date": {
            "type": "string",
            "description": "Date of the task",
            "example": "2023-10-09"
          },
          "start": {
            "type": "string",
            "description": "Start time of the task",
            "example": "11:30"
          },
          "end": {
            "type": "string",
            "description": "End time of the task",
            "example": "14:10"
          }
        }
    },
      "CreateTaskResponse": {
        "type": "object",
        "properties": {
          "_id": {
                  "type": "string",
                  "description": "Unique identifier for the created task",
                  "example": "651af32c1281770165a9be89"
                },
                "title": {
                  "type": "string",
                  "description": "Task title",
                  "example": "Task title"
                },
                "priority": {
                  "type": "string",
                  "description": "Task priority",
                  "example": "medium"
                },
                "category": {
                  "type": "string",
                  "description": "Task category",
                  "example": "to-do"
                },
                "date": {
                  "type": "string",
                  "description": "Date of the task",
                  "example": "2023-10-09"
                },
                "start": {
                  "type": "string",
                  "description": "Start time of the task",
                  "example": "11:30"
                },
                "end": {
                  "type": "string",
                  "description": "End time of the task",
                  "example": "14:10"
                }
              }
      },
      "UpdateTaskRequest": {
        "type": "object",
        "properties": {
          "title": {
                  "type": "string",
                  "description": "Task title",
                  "example": "Task title"
                },
                "priority": {
                  "type": "string",
                  "description": "Task priority",
                  "example": "high"
                },
                "category": {
                  "type": "string",
                  "description": "Task category",
                  "example": "to-do"
                },
                "date": {
                  "type": "string",
                  "description": "Date of the task",
                  "example": "2023-10-09"
                },
                "start": {
                  "type": "string",
                  "description": "Start time of the task",
                  "example": "12:00"
                },
                "end": {
                  "type": "string",
                  "description": "End time of the task",
                  "example": "16:40"
                }
        }
    },
      "UpdateTaskResponse": {
        "type": "object",
        "properties": {
          "_id": {
                  "type": "string",
                  "description": "Unique identifier for the updated task",
                  "example": "651af32c1281770165a9be89"
                },
                "title": {
                  "type": "string",
                  "description": "Task title",
                  "example": "Task title"
                },
                "priority": {
                  "type": "string",
                  "description": "Task priority",
                  "example": "high"
                },
                "category": {
                  "type": "string",
                  "description": "Task category",
                  "example": "to-do"
                },
                "date": {
                  "type": "string",
                  "description": "Date of the task",
                  "example": "2023-10-09"
                },
                "start": {
                  "type": "string",
                  "description": "Start time of the task",
                  "example": "12:00"
                },
                "end": {
                  "type": "string",
                  "description": "End time of the task",
                  "example": "16:40"
                }
        }
    },
    "DeleteTaskResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Unique identifier for the deleted task",
            "example": "651af32c1281770165a9be89"
          }
        }
    },
    "GetAllReviewsResponse": {
        "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code",
              "example": 200
            },
            "message": {
              "type": "string",
              "description": "Message describing the response",
              "example": "Successfully"
            },
            "reviews": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Unique identifier for the review",
                    "example": "651af32c1281770165a9be89"
                  },
                  "rating": {
                    "type": "integer",
                    "description": "User's rating for the item",
                    "example": 5
                  },
                  "comment": {
                    "type": "string",
                    "description": "User's comment",
                    "example": "User Comment"
                  },
                  "userName": {
                    "type": "string",
                    "description": "User's username",
                    "example": "userName"
                  },
                  "avatarUrl": {
                    "type": "string",
                    "description": "URL of the user's avatar",
                    "example": "http://res.cloudinary.com/photo.jpg"
                  }
                }
              }
            },
            "total": {
              "type": "integer",
              "description": "Total reviews",
              "example": 10
            }
        }
      },
      "GetUsersReviewResponse": {
        "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code",
              "example": 200
            },
            "message": {
              "type": "string",
              "description": "Message describing the response",
              "example": "Successfully"
            },
            "reviews": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Unique identifier for the review",
                    "example": "651af32c1281770165a9be89"
                  },
                  "rating": {
                    "type": "integer",
                    "description": "User's rating for the item",
                    "example": 5
                  },
                  "comment": {
                    "type": "string",
                    "description": "User's comment",
                    "example": "User Comment"
                  },
                  "userName": {
                    "type": "string",
                    "description": "User's username",
                    "example": "userName"
                  },
                  "avatarUrl": {
                    "type": "string",
                    "description": "URL of the user's avatar",
                    "example": "http://res.cloudinary.com/photo.jpg"
                  }
              }
            }
        }
      },
      "AddReviewRequest": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "integer",
            "description": "User's rating for the item",
            "example": 5
          },
          "comment": {
            "type": "string",
            "description": "User's comment",
            "example": "User comment"
          }
        }
      },
      "AddReviewResponse": {
        "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code",
              "example": 201
            },
            "message": {
              "type": "string",
              "description": "Message describing the response",
              "example": "Successfully added review"
            },
            "reviewData": {
              "type": "object",
              "properties": {
                "_id": {
                    "type": "string",
                    "description": "Unique identifier for the review",
                    "example": "651af32c1281770165a9be89"
                  },
                "rating": {
                  "type": "integer",
                  "description": "User's rating for the item",
                  "example": 5
                },
                "comment": {
                  "type": "string",
                  "description": "User's comment",
                  "example": "User comment"
                }
              }
            }
        }
      },
      "UpdateReviewRequest": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "integer",
            "description": "User's updated rating for the item",
            "example": 5
          },
          "comment": {
            "type": "string",
            "description": "User's updated comment",
            "example": "Review comment"
          }
        }
      },
      "UpdateReviewResponse": {
        "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code",
              "example": 200
            },
            "message": {
              "type": "string",
              "description": "Message describing the response",
              "example": "Review was updated successfully"
            },
            "reviewData": {
              "type": "object",
              "properties": {
                "rating": {
                  "type": "integer",
                  "description": "User's updated rating for the item",
                  "example": 5
                },
                "comment": {
                  "type": "string",
                  "description": "User's updated comment",
                  "example": "Review comment"
                }
              }
            }
        }
      },
      "DeleteReviewResponse": {
        "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP status code",
              "example": 200
            },
            "message": {
              "type": "string",
              "description": "Message describing the response",
              "example": "Review is deleted successfully"
            }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
} 
}